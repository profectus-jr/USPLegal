# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)

User.create(name: "Administrador do USP Legal", nusp: 1234567, cpf: "12345678910", password: "password", email: "administrador@usp.legal.br", kind: "admin")
estag = User.create(name: "Estagiario do USP Legal", nusp: 5691748, cpf: "12345678910", password: "password", email: "estagiario@usp.legal.br", kind: "estag")#

admin = User.create(name: "Administrador do USP Legal", nusp: 4567890, cpf: "123.456.789-10", password: "password", email: "administrador@usp.legal.br", kind: "admin")
estag1 = User.create(name: "João Paulo", nusp: 5678901, cpf: "366.272.837-12", password: "password", email: "joao.paulo@usp.legal.br", kind: "estag")
estag2 = User.create(name: "Maria Lourdes", nusp: 4567812, cpf: "400.272.837-12", password: "password", email: "maria.lourdes@usp.legal.br", kind: "estag")

labsoft = Building.create(idAtlas: 1234567890, name: "Labsoft")
lanchonete = Building.create(idAtlas: 1234567891, name: "Lanchonete")
banheiro = Building.create(idAtlas: 1234567892, name: "Banheiro masculino térreo")
EquipType.create(kind: "Escada fixa")
porta = EquipType.create(kind: "Porta")

equip = Equipment.create(is_there: true, equip_type: porta, building: labsoft)
equip2 = Equipment.create(is_there: false, equip_type: porta, building: labsoft)

inspecaoNaoOk = estag.inspections.create(photo_url: "about:blank", equipment: equip)
inspecaoOK = estag.inspections.create(photo_url: "about:blank", equipment: equip)

pergunta = ChecklistItem.create(question: "Que pergunta idiota...", equip_type: porta)

Answer.create(is_ok: true, inspection: inspecaoNaoOk, checklist_item: pergunta)
Answer.create(is_ok: false, inspection: inspecaoOK, checklist_item: pergunta)

passeio_publico = EquipType.create(kind: "PASSEIO PÚBLICO")
ChecklistItem.create(question: "A faixa livre possui largura livre mínima de 1,20 m?", equip_type: passeio_publico)
ChecklistItem.create(question: "A faixa livre possui altura livre de qualquer interferência de até 2,10 m?", equip_type: passeio_publico)
ChecklistItem.create(question: "A faixa livre possui inclinação longitudinal acompanhando o greide da rua?", equip_type: passeio_publico)
ChecklistItem.create(question: "A faixa livre possui Inclinação transversal de no máximo 2%?", equip_type: passeio_publico)
ChecklistItem.create(question: "A faixa de serviço possui no mínimo 0,70 m?", equip_type: passeio_publico)
ChecklistItem.create(question: "O piso dos passeios é de concreto pré-moldado ou moldado in loco, com juntas ou em placas, bloco de concreto intertravado ou ladrilho hidráulico?", equip_type: passeio_publico)
ChecklistItem.create(question: "Os acessos de estacionamento estão localizados dentro da faixa de serviço ou dentro da faixa de acesso junto aos imóveis, não obstruindo a faixa de livre circulação e não interferindo na sua inclinação transversal?", equip_type: passeio_publico)
ChecklistItem.create(question: "Os acessos de estacionamento ocupam mais de 1/3 da largura da calçada e respeitam a dimensão mínima de 0,50 m e máxima de 1,00 m?", equip_type: passeio_publico)
ChecklistItem.create(question: "Os rebaixamentos atendem à Resolução CPA/SEHAB-G/011/2003?", equip_type: passeio_publico)

estacionamento = EquipType.create(kind: "ESTACIONAMENTO")
ChecklistItem.create(question: "Vagas: estão localizadas próximas ao acesso principal do edifício?", equip_type: estacionamento)
ChecklistItem.create(question: "Vagas: Possuem dimensões mínimas de 3,50 m x 5,50 m?", equip_type: estacionamento)
ChecklistItem.create(question: "Vagas: Possuem sinalização horizontal pintada no piso?", equip_type: estacionamento)
ChecklistItem.create(question: "Vagas: Possuem rebaixamento de guia no alinhamento da faixa de circulação?", equip_type: estacionamento)
ChecklistItem.create(question: "O número de vagas reservadas está de acordo com as exigências?", equip_type: estacionamento)
ChecklistItem.create(question: "Possui sinalização vertical identificada com placa, de acordo com o Símbolo Internacional de Acesso - SIA?", equip_type: estacionamento)

entradas_e_saidas = EquipType.create(kind: "ENTRADAS E SAÍDAS")
ChecklistItem.create(question: "Os pisos possuem superfície regular, firme, contínua, estável e antiderrapante sob quaisquer condições climáticas?", equip_type: entradas_e_saidas)
ChecklistItem.create(question: "Possuem percurso livre de obstáculos, com largura mínima de 1,20 m?", equip_type: entradas_e_saidas)
ChecklistItem.create(question: "A inclinação transversal da superfície é de no máximo 2% para pisos internos e 3% para externos?", equip_type: entradas_e_saidas)
ChecklistItem.create(question: "No caso de catracas ou cancelas, ao menos uma é acessível às pessoas com deficiência ou mobilidade reduzida?", equip_type: entradas_e_saidas)
ChecklistItem.create(question: "Em edificações novas: todas as entradas e saídas estão em nível ou possuem rampas ou equipamentos eletromecânicos?", equip_type: entradas_e_saidas)
ChecklistItem.create(question: "Em edificações existentes: a distância máxima de percurso real da entrada principal (não-acessível) até a entrada acessível é inferior a 50 m", equip_type: entradas_e_saidas)
ChecklistItem.create(question: "Possuem piso tátil de alerta para sinalização e indicação de mudança de plano da superfície do piso e presença de obstáculos?", equip_type: entradas_e_saidas)
ChecklistItem.create(question: "Possuem Símbolo Internacional de Acesso - SIA para indicar, localizar e direcionar adequadamente a pessoa com deficiência ou mobilidade reduzida para a rota acessível?", equip_type: entradas_e_saidas)


desniveis = EquipType.create(kind: "DESNÍVEIS")
ChecklistItem.create(question: "Os desníveis entre 0,5 cm e 1,5 cm possuem acabamento chanfrado na proporção de 1:2?", equip_type: desniveis)


portas_e_aberturas = EquipType.create(kind: "PORTAS E ABERTURAS")
#variaveis usadas nas inspecoes
pergPorta1 = ChecklistItem.create(question: "Vãos: Todas as portas e vãos de passagem possuem largura livre mínima de 0,80 m?", equip_type: portas_e_aberturas)
pergPorta2 = ChecklistItem.create(question: "Possuem altura livre mínima de 2,10 m?", equip_type: portas_e_aberturas)
pergPorta3 = ChecklistItem.create(question: "Em locais de práticas esportivas as portas possuem largura livre mínima de 1,00 m?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Maçanetas: Todas as maçanetas são do tipo alavanca?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Maçanetas: Estão a uma altura entre 0,90 m e 1,10 m do piso acabado?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Puxador: Todas as portas de sanitários, vestiários e quartos acessíveis possuem puxador horizontal?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Puxador: Está a uma altura de 0,90 m de eixo a piso?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Puxador: O comprimento é igual à metade da largura da porta?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Visores: Os visores das portas do tipo vaivém possuem altura inferior iniciando entre 0,40 m e 0,90 m?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Possuem altura superior no mínimo a 1,50 m do piso acabado?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "Possuem largura mínima de 0,20 m?", equip_type: portas_e_aberturas)
ChecklistItem.create(question: "As portas dos ambientes comuns, como sanitários, salas de aula, saídas de emergência e outros, possuem sinalização visual e tátil?", equip_type: portas_e_aberturas)


rampa = EquipType.create(kind: "RAMPA")
ChecklistItem.create(question: "A rampa possui largura mínima de 1,20 m para obras novas ou 0,90 m para reformas?", equip_type: rampa)
ChecklistItem.create(question: "O patamar possui no mínimo de 1,20 m de comprimento?", equip_type: rampa)
ChecklistItem.create(question: "Guia de balizamento: A rampa possui paredes laterais ou guia de balizamento?", equip_type: rampa)
ChecklistItem.create(question: "A guia de balizamento possui altura mínima de 5 cm executadas nas projeções dos guardacorpos?", equip_type: rampa)
ChecklistItem.create(question: "Piso tátil: A rampa possui piso tátil de alerta com largura entre 0,25 m e 0,60 m localizado antes do início e após o término da rampa?", equip_type: rampa)
ChecklistItem.create(question: "O piso tátil de alerta está distante no máximo 0,32 m da mudança de plano?", equip_type: rampa)
ChecklistItem.create(question: "Corrimão: A rampa possui corrimão contínuo nos dois lados?", equip_type: rampa)
ChecklistItem.create(question: "Corrimão: Possui dupla altura de 0,70 m e 0,92 m?", equip_type: rampa)
ChecklistItem.create(question: "Corrimão: Possui prolongamento de 0,30 m nas extremidades?", equip_type: rampa)
ChecklistItem.create(question: "A rampa com mais de 2,40 m de largura possui corrimão central, além dos laterais?", equip_type: rampa)
ChecklistItem.create(question: "Rampa em curva: a rampa em curva possui inclinação máxima de 8,33%?", equip_type: rampa)
ChecklistItem.create(question: "Rampa em curva: Possui raio de 3,00 m no mínimo, medidos no perímetro interno à curva?", equip_type: rampa)
ChecklistItem.create(question: "A inclinação transversal máxima da rampa é de 2% em rampas internas e 3% em rampas externas?", equip_type: rampa)
ChecklistItem.create(question: "Corrimão: Possui seção circular entre 3,0 cm e 4,5 cm?", equip_type: rampa)
ChecklistItem.create(question: "Corrimão: Permite passagem contínua da mão?", equip_type: rampa)


escada_e_degraus_isolados = EquipType.create(kind: "ESCADA E DEGRAUS ISOLADOS")
ChecklistItem.create(question: "A escada possui largura mínima de 1,20 m?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "O patamar possui comprimento mínimo de 1,20 m?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Piso tátil: A escada possui piso tátil de alerta com largura entre 0,25 m e 0,60 m localizado antes do início e após o término da escada?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Piso tátil: O piso tátil de alerta está distante no máximo 0,32 m da mudança de plano?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Piso tátil: O degrau isolado possui piso tátil de alerta com largura entre 0,25 m e 0,60 m localizado antes do início e após o término do degrau?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Piso tátil: O piso tátil de alerta está distante no máximo 0,32 m antes do início e após o término do degrau?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Corrimão: A escada possui corrimão contínuo nos dois lados?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Corrimão: Possui altura de 0,92 m?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Corrimão: Possui prolongamento de 0,30 m nas extremidades?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Corrimão: A escada com mais de 2,40 m de largura possui corrimão central, além dos laterais?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "A inclinação transversal dos degraus é de no máximo 1%?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Corrimão: Possui seção circular entre 3,0 cm e 4,5 cm?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Corrimão: Permitem passagem contínua da mão?", equip_type: escada_e_degraus_isolados)
ChecklistItem.create(question: "Todos os degraus possuem sinalização visual em cor contrastante na borda do piso, comprimento mínimo de 20 cm e largura entre 2 cm e 3 cm?", equip_type: escada_e_degraus_isolados)

elevador_de_passageiros = EquipType.create(kind: "ELEVADOR DE PASSAGEIROS")
ChecklistItem.create(question: "Todos os elevadores de passageiros, que foram adequados para atender pessoas com deficiência, atendem à NM 313:2007?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador, em edificações novas, possui cabina com dimensões mínimas de 1,10m (largura) x 1,40 m (profundidade)?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador adaptado, em edificações existentes, possui cabina com dimensão mínima de 1,00 m (largura) x 1,25 m (profundidade)?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "Piso tátil: O elevador possui piso tátil de alerta junto à porta com largura entre 0,25 m e 0,60 m?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "Piso tátil: O piso tátil de alerta está distante no máximo 0,32 m da porta?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "As botoeiras do elevador estão localizadas entre a altura mínima de 0,89 m e máxima de 1,35 m do piso?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador possui espelho fixado na parede oposta à porta?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador possui sinalização em Braille ao lado esquerdo do botão correspondente?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador possui registro visível e audível dado a cada operação individual do botão?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador possui sinal sonoro diferenciado para subida e descida?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador possui comunicação sonora interna indicando o andar em que o elevador se encontra parado?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador possui identificação do pavimento afixada em ambos os lados do batente do elevador, respeitando a altura entre 0,90 m e 1,10 m?", equip_type: elevador_de_passageiros)
ChecklistItem.create(question: "O elevador possui dispositivo de comunicação para solicitação de auxílio?", equip_type: elevador_de_passageiros)


elevador_exclusivo_para_pessoa_com_deficiencia = EquipType.create(kind: "ELEVADOR EXCLUSIVO PARA PESSOA COM DEFICIÊNCIA")
ChecklistItem.create(question: "O percurso máximo é de no máximo 12 m de altura?", equip_type: elevador_exclusivo_para_pessoa_com_deficiencia)
ChecklistItem.create(question: "Possui dimensões mínimas de 0,90 m de largura e 1,30 m de profundidade?", equip_type: elevador_exclusivo_para_pessoa_com_deficiencia)

plataforma_elevatoria = EquipType.create(kind: "PLATAFORMA ELEVATÓRIA")
ChecklistItem.create(question: "A plataforma, de uso privado, possui dimensões mínimas 0,80 m x 1,25 m?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "A plataforma, de uso público, possui dimensões mínimas de 0,90 m x 1,40 m?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "A plataforma obstrui a escada?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso Vertical: O desnível vencido é de até 2,00 m em edificações de uso público ou coletivo?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso Vertical: O desnível vencido é de até 4,00 m em edificações de uso particular?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso Vertical: Possui fechamento contínuo até 1,10 m do piso?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso Vertical: Em desníveis superiores a 2,00 m em edificação de uso público ou coletivo a plataforma possui caixa enclausurada?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso Vertical: Na passagem através da laje existe caixa enclausurada?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "A projeção do seu percurso está sinalizada no piso?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Possui Símbolo Internacional de Acesso - SIA, visível em todos os pavimentos?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: Possui parada programada nos patamares ou a cada 3,20 m?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: Possui assento escamoteável?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: Possui sinalização tátil e visual informando a obrigatoriedade de acompanhamento de pessoa habilitada na área de embarque?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: Possui sistema de solicitação de socorro e dispositivo de comunicação?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: Possui sinalização visual demarcando a área de embarque?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: Possui sinalização visual demarcando a projeção do percurso do equipamento com alarme sonoro e luminoso que indiquem seu movimento?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: A velocidade é menor do que 0,15 m/s, com dispositivo de segurança para controle de velocidade acionado automaticamente, caso a velocidade exceda 0,3 m/s?", equip_type: plataforma_elevatoria)
ChecklistItem.create(question: "Percurso inclinado: O guarda-rodas possui altura mínima de 0,10 m em todas as laterais?", equip_type: plataforma_elevatoria)

escada_rolante = EquipType.create(kind: "ESCADA ROLANTE")
ChecklistItem.create(question: "Piso tátil: A escada rolante possui piso tátil de alerta com largura entre 0,25 m e 0,60 m localizado antes do início e após o término da escada rolante?", equip_type: escada_rolante)
ChecklistItem.create(question: "Piso tátil: O piso tátil de alerta está distante no máximo 0,32 m da mudança de plano?", equip_type: escada_rolante)
ChecklistItem.create(question: "A escada rolante possui sinalização visual com instruções de uso?", equip_type: escada_rolante)
ChecklistItem.create(question: "A escada rolante com plataforma para cadeira de rodas possui sinalização visual e tátil informando a obrigatoriedade de acompanhamento por pessoa habilitada durante sua utilização por pessoa em cadeira de rodas?", equip_type: escada_rolante)



esteira_rolante = EquipType.create(kind: "ESTEIRA ROLANTE")
ChecklistItem.create(question: "Piso tátil: A escada rolante possui piso tátil de alerta com largura entre 0,25 m e 0,60 m localizado antes do início e após o término da escada rolante?", equip_type: esteira_rolante)
ChecklistItem.create(question: "Piso tátil: O piso tátil de alerta está distante no máximo 0,32 m da mudança de plano?", equip_type: esteira_rolante)
ChecklistItem.create(question: "A esteira rolante possui sinalização visual com instruções de uso?", equip_type: esteira_rolante)
ChecklistItem.create(question: "A esteira rolante com inclinação superior a 5%, possui sinalização visual informando a obrigatoriedade de acompanhamento por pessoa habilitada durante sua utilização por pessoa em cadeira de rodas?", equip_type: esteira_rolante)


boxe_adaptado_de_sanitarios = EquipType.create(kind: "BOXE ADAPTADO DE SANITÁRIOS")
ChecklistItem.create(question: "O sanitário acessível possui instalação de dispositivo de sinalização de emergência ao lado da bacia com altura de 0,40 m do piso?", equip_type: boxe_adaptado_de_sanitarios)
ChecklistItem.create(question: "Possui no mínimo 5% para cada sexo(com no mínimo uma peça) do total de cada peça existente das instalações sanitárias adequada ao uso da pessoa com deficiência?", equip_type: boxe_adaptado_de_sanitarios)
ChecklistItem.create(question: "Nas edificações novas: O sanitário acessível possui dimensão mínima de 1,50 m (largura) x 1,70 m (profundidade)?", equip_type: boxe_adaptado_de_sanitarios)
ChecklistItem.create(question: "Nas edificações novas: A porta possui 0,80 m de vão livre?", equip_type: boxe_adaptado_de_sanitarios)
ChecklistItem.create(question: "Nas edificações novas: Possui área de manobra que permita rotação de 180° (1,20 m x 1,50 m) internamente ao boxe?", equip_type: boxe_adaptado_de_sanitarios)
ChecklistItem.create(question: "Nas edificações existentes: O sanitário acessível possui dimensão mínima de 1,50 m x 1,50 m?", equip_type: boxe_adaptado_de_sanitarios)
ChecklistItem.create(question: "Nas edificações existentes: A porta possui 1,00 m de vão livre?", equip_type: boxe_adaptado_de_sanitarios)
ChecklistItem.create(question: "Nas edificações existentes: Possui área de manobra que permita rotação de 180° (1,20 m x 1,50 m) externamente ao boxe?", equip_type: boxe_adaptado_de_sanitarios)


bacia_sanitaria = EquipType.create(kind: "BACIA SANITÁRIA")
ChecklistItem.create(question: "Possui área de transferência lateral, diagonal e perpendicular?", equip_type: bacia_sanitaria)
ChecklistItem.create(question: "As bacias de sanitário acessível possuem 0,46 m de altura da borda superior ao piso acabado?", equip_type: bacia_sanitaria)
ChecklistItem.create(question: "As barras de apoio possuem altura e dimensões adequadas?", equip_type: bacia_sanitaria)
ChecklistItem.create(question: "A papeleira embutida: Da bacia acessível está localizada a uma altura de 0,50 m a 0,60 m do piso acabado?", equip_type: bacia_sanitaria)
ChecklistItem.create(question: "A papeleira embutida: Possui distância máxima de 0,15 m da borda frontal da bacia?", equip_type: bacia_sanitaria)
ChecklistItem.create(question: "A papeleira sobreposta: Da bacia acessível está localizada a uma altura de 1,00 m a 1,20 m do piso acabado?", equip_type: bacia_sanitaria)
ChecklistItem.create(question: "A papeleira sobreposta: Possui distância máxima de 0,15 m da borda frontal da bacia?", equip_type: bacia_sanitaria)

lavatorio = EquipType.create(kind: "LAVATÓRIO")
pergLav1 = ChecklistItem.create(question: "O lavatório possui área de aproximação frontal para usuários em cadeiras de rodas?", equip_type: lavatorio)
ChecklistItem.create(question: "Possui comandos de torneira do tipo monocomando, alavanca ou sensor eletrônico?", equip_type: lavatorio)
ChecklistItem.create(question: "O lavatório: Está instalado entre 0,78 m e 0,80 m do piso em relação à sua face superior?", equip_type: lavatorio)
ChecklistItem.create(question: "O lavatório: Permite altura livre de 0,73 m, sem colunas ou gabinetes, com proteção para o sifão e a tubulação?", equip_type: lavatorio)
ChecklistItem.create(question: "O lavatório possui barra de apoio na horizontal na altura adequada?", equip_type: lavatorio)
ChecklistItem.create(question: "O espelho do sanitário acessível: Possui a borda inferior na altura de no máximo 0,90 m em relação ao piso acabado?", equip_type: lavatorio)
ChecklistItem.create(question: "O espelho do sanitário acessível: Quando inclinados a 10°, a borda inferior está na altura de no máximo 1,10 m em relação ao piso acabado?", equip_type: lavatorio)



mictorios = EquipType.create(kind: "MICTÓRIOS")
ChecklistItem.create(question: "O mictório acessível possui área de aproximação frontal?", equip_type: mictorios)
ChecklistItem.create(question: "Possui barras verticais com dimensões e alturas adequadas?", equip_type: mictorios)
ChecklistItem.create(question: "Possui afastamento máximo entre as barras de 0,60 m?", equip_type: mictorios)
ChecklistItem.create(question: "O mictório está instalado a uma altura de 0,60 m a 0,65 m da borda frontal?", equip_type: mictorios)


chuveiro = EquipType.create(kind: "CHUVEIRO")
ChecklistItem.create(question: "O boxe do chuveiro acessível possui área de transferência externa ao boxe, permitindo a aproximação paralela da pessoa em cadeira de rodas?", equip_type: chuveiro)
ChecklistItem.create(question: "Possui barras de apoio na vertical, horizontal ou em 'L' com dimensões e alturas adequadas?", equip_type: chuveiro)
ChecklistItem.create(question: "O banco: Possui dimensões mínimas de 0,70 m x 0,45 m?", equip_type: chuveiro)
ChecklistItem.create(question: "O banco: Possui os cantos arredondados?", equip_type: chuveiro)
ChecklistItem.create(question: "O banco: A superfície é antiderrapante e impermeável?", equip_type: chuveiro)
ChecklistItem.create(question: "Possui torneiras do tipo monocomando acionadas por alavanca?", equip_type: chuveiro)
ChecklistItem.create(question: "Possui ducha manual localizada a 1 m de altura do piso?", equip_type: chuveiro)
ChecklistItem.create(question: "A saboneteira e o porta-toalhas estão localizados entre 0,80 m e 1,20 m do piso acabado?", equip_type: chuveiro)
ChecklistItem.create(question: "O desnível máximo entre o boxe do chuveiro e o restante do sanitário é de no máximo 1,5 cm chanfrado com inclinação de 1:2 (50%)?", equip_type: chuveiro)



banheira = EquipType.create(kind: "BANHEIRA")
ChecklistItem.create(question: "A banheira possui área de transferência lateral?", equip_type: banheira)
ChecklistItem.create(question: "O banco: possui superfície antiderrapante e impermeável?", equip_type: banheira)
ChecklistItem.create(question: "O banco: Está localizado a uma altura de 0,46 m do piso acabado?", equip_type: banheira)
ChecklistItem.create(question: "Possui barras verticais e horizontais com dimensões e alturas adequadas?", equip_type: banheira)
ChecklistItem.create(question: "Possui torneira do tipo monocomando acionadas por alavanca?", equip_type: banheira)




vestiarios = EquipType.create(kind: "VESTIÁRIOS")
ChecklistItem.create(question: "O vestiário permite áreas de manobras para transferência?", equip_type: vestiarios)
ChecklistItem.create(question: "Possui área de circulação para usuários de cadeira de rodas?", equip_type: vestiarios)
ChecklistItem.create(question: "Possui banco provido de encosto com no mínimo 0,45 m de profundidade?", equip_type: vestiarios)
ChecklistItem.create(question: "Vestiários em cabinas individuais: Possuem superfície para a troca de roupa com dimensões de 1,80 m x 0,80 m?", equip_type: vestiarios)
ChecklistItem.create(question: "Vestiários em cabinas individuais: Possuem superfície para a troca de roupa com altura de 0,46 m do piso?", equip_type: vestiarios)
ChecklistItem.create(question: "Vestiários em cabinas individuais: Está associada a barras de apoio horizontal com dimensões e alturas adequadas?", equip_type: vestiarios)


rotas_de_fuga = EquipType.create(kind: "ROTAS DE FUGA")
ChecklistItem.create(question: "A rota de fuga possui uma área de resgate de 0,80 m x 1,20 m, ventilada e fora do fluxo de circulação, para cada 500 pessoas?", equip_type: rotas_de_fuga)

locais_de_reuniao = EquipType.create(kind: "LOCAIS DE REUNIÃO")
ChecklistItem.create(question: "O local de reunião possui quantidade adequada de espaços para pessoas em cadeira de rodas (PCR)?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "O local de reunião possui quantidade adequada de assentos reservados para pessoa com mobilidade reduzida (PMR)?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "O local de reunião possui quantidade adequada de assentos reservados para pessoa obesa (PO)?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Os espaços reservados para pessoa em cadeira de rodas: Estão associados a um assento fixo para acompanhante?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Os espaços reservados para pessoa em cadeira de rodas: Possuem dimensão mínima de 0,80 m x 1,20 m?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Os espaços reservados para pessoa em cadeira de rodas: Estão deslocados 0,30 m em relação à cadeira ao lado?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Os assentos reservados para pessoa com mobilidade reduzida possuem um espaço livre frontal de no mínimo 0,60 m?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Os assentos reservados para pessoa obesa: Possuem largura equivalente à de dois assentos adotados no local?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Os assentos reservados para pessoa obesa: Possuem espaço livre frontal de no mínimo 0,60 m?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Palco: Possui rampa ou equipamento eletromecânico para acesso?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Palco: No caso de rampa: Essa possui largura mínima de 0,90m?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Palco: No caso de rampa: A inclinação é de no máximo 1:6 (16,66%), para altura de até 0,60 m?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Palco: No caso de rampa: A inclinação é de no máximo de 1:10 (10%), para alturas superiores a 0,60 m?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Palco: No caso de rampa: Possui guia de balizamento ou corrimão?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Existe pelo menos um camarim acessível feminino e um masculino?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "Banco para pessoas obesas: Suportam uma carga de no mínimo 250 kg?", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "A bilheteria acessível: Possui altura máxima de 1,05 m do piso acabado? ", equip_type: locais_de_reuniao)
ChecklistItem.create(question: "A bilheteria acessível: Está sinalizada com o Símbolo Internacional de Acesso - SIA?", equip_type: locais_de_reuniao)


locais_de_hospedagem = EquipType.create(kind: "LOCAIS DE HOSPEDAGEM")
ChecklistItem.create(question: "Os locais de hospedagem possuem pelo menos 5%, com no mínimo um, do total de dormitórios e sanitário acessíveis às pessoas com deficiência ou mobilidade reduzida?", equip_type: locais_de_hospedagem)
ChecklistItem.create(question: "Os sanitários possuem dispositivo de chamada para casos de emergência?", equip_type: locais_de_hospedagem)



servicos_de_saude = EquipType.create(kind: "SERVIÇOS DE SAÚDE")
ChecklistItem.create(question: "Nos locais de serviços de saúde que comportem internações de pacientes, pelo menos 10% com no mínimo um dos sanitários em apartamentos são acessíveis?", equip_type: servicos_de_saude)
ChecklistItem.create(question: "Os ambulatórios, postos de saúde, prontos-socorros, laboratórios de análises clínicas, centros de diagnósticos, entre outros, possuem pelo menos 10% de sanitários acessíveis, sendo no mínimo um por pavimento?", equip_type: servicos_de_saude)
ChecklistItem.create(question: "Pelo menos uma das salas para cada tipo de serviço prestado é acessível e está em rota acessível?", equip_type: servicos_de_saude)

copa_e_cozinha = EquipType.create(kind: "COPA E COZINHA")
ChecklistItem.create(question: "A largura livre mínima para aproximação é de 0,80 m?", equip_type: copa_e_cozinha)
ChecklistItem.create(question: "A pia possui altura de no máximo 0,85 m do piso acabado?", equip_type: copa_e_cozinha)
ChecklistItem.create(question: "A altura livre inferior é de no mínimo 0,73 m?", equip_type: copa_e_cozinha)

locais_de_esporte_lazer_e_turismo = EquipType.create(kind: "LOCAIS DE ESPORTE, LAZER E TURISMO")
ChecklistItem.create(question: "Existe percurso acessível interligando quadras, vestiários, sanitários e espaços reservados na arquibancada?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "As portas e vãos de passagem possuem vão livre de no mínimo 1,00 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "A arquibancada possui quantidade adequada de espaços reservados para pessoas em cadeira de rodas (PCR)?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "A arquibancada possui quantidade adequada de assentos reservados para pessoa com mobilidade reduzida (PMR)?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "A arquibancada possui quantidade adequada de assentos reservados para pessoa obesa (PO)?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os espaços reservados para pessoa em cadeira de rodas: Estão associados a um assento fixo para acompanhante?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os espaços reservados para pessoa em cadeira de rodas: Possuem dimensão mínima de 0,80 m x 1,20 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os espaços reservados para pessoa em cadeira de rodas: Estão deslocados 0,30 m em relação à cadeira ao lado?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os assentos reservados para pessoa com mobilidade reduzida possuem um espaço livre frontal de no mínimo 0,60 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os assentos reservados para pessoa obesa: Possuem largura equivalente à de dois assentos adotados no local?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os assentos reservados para pessoa obesa: Possuem espaço livre frontal de no mínimo 0,60 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "A piscina possui acesso à água com banco para transferência associado ou degraus ou rampa submersos?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Assento para obesos: Suportam uma carga de no mínimo 250 kg?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "O banco de transferência: Possui altura de 0,46 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "O banco de transferência: Possui extensão de no mínimo 1,20 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "O banco de transferência: Possui profundidade de 0,45 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "A escada ou rampa submersa: Possuem corrimãos em três alturas, de ambos os lados?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "A escada ou rampa submersa: Estão nas seguintes alturas: 0,45 m, 0,70 m e 0,92 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "A escada ou rampa submersa: A distância livre entre eles é de no mínimo 0,80 m e no máximo 1,00 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os degraus submersos: Têm piso de no mínimo 0,46 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "Os degraus submersos: Possuem espelho de no máximo 0,20 m?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "O piso no entorno das piscinas possui superfície antiderrapante?", equip_type: locais_de_esporte_lazer_e_turismo)
ChecklistItem.create(question: "As bordas e degraus de acesso à água possuem acabamento arredondado?", equip_type: locais_de_esporte_lazer_e_turismo)

<<<<<<< HEAD

Building.create(idAtlas: "3911", name: "IO")
Building.create(idAtlas: "4807", name: "POLI_Eletrica")
Building.create(idAtlas: "4719", name: "POLI_Administracao")
Building.create(idAtlas: "4808", name: "POLI_Circo")
Building.create(idAtlas: "4654", name: "IB")
Building.create(idAtlas: "157", name: "ICB")
Building.create(idAtlas: "679", name: "IQ")
Building.create(idAtlas: "1", name: "FFLCH")
Building.create(idAtlas: "4805", name: "CEPEUSP")



labsoft = Building.create(idAtlas: 1234567890, name: "Labsoft")
lanchonete = Building.create(idAtlas: 1234567891, name: "Lanchonete")
banheiro = Building.create(idAtlas: 1234567892, name: "Banheiro masculino térreo")


equipPortaLabsoft = Equipment.create(is_there: false, equip_type: portas_e_aberturas, building: labsoft)
equipPortaLanchonete = Equipment.create(is_there: true, equip_type: portas_e_aberturas, building: lanchonete)
equipPortaBanheiro = Equipment.create(is_there: true, equip_type: portas_e_aberturas, building: banheiro)
equipLavatorio = Equipment.create(is_there: true, equip_type: lavatorio, building: banheiro)



inspPortaLabsoft = Inspection.create(photo_url: "http://4.bp.blogspot.com/_xCWYfvsLCZw/S-a9ml_pzSI/AAAAAAAACCY/Jj8W8KGp234/s400/PortaSala_01.jpg", user: estag1, equipment: equipPortaLabsoft, user: estag1)
inspPortaLanchonete = Inspection.create(photo_url: "http://farm4.staticflickr.com/3266/2579525072_f0c9908c89_z.jpg", user: estag1, equipment: equipPortaLanchonete, user: estag1)
inspPortaBanheiro = Inspection.create(photo_url: "http://farm4.staticflickr.com/3266/2579525072_f0c9908c89_z.jpg", user: estag2, equipment: equipPortaBanheiro, user: estag2)
inspLavatorio = Inspection.create(photo_url: "http://images03.olx.com.br/ui/20/34/31/1335986470_367213331_1-Lavatorio-em-Marmores-jundiai-Retiro.jpg", user: estag2, equipment: equipLavatorio, user: estag2)
inspLavatorio2 = Inspection.create(photo_url: "http://images03.olx.com.br/ui/20/34/31/1335986470_367213331_1-Lavatorio-em-Marmores-jundiai-Retiro.jpg", user: estag1, equipment: equipLavatorio, user: estag1)



a = Answer.create(is_ok: 1, inspection: inspPortaLabsoft, checklist_item: pergPorta1)
Answer.create(is_ok: 1, inspection: inspPortaLabsoft, checklist_item: pergPorta2)
Answer.create(is_ok: 2, inspection: inspPortaLabsoft, checklist_item: pergPorta3)

Answer.create(is_ok: 1, inspection: inspPortaLanchonete, checklist_item: pergPorta1)
Answer.create(is_ok: 2, inspection: inspPortaLanchonete, checklist_item: pergPorta2)
Answer.create(is_ok: 0, inspection: inspPortaLanchonete, checklist_item: pergPorta3)

Answer.create(is_ok: 1, inspection: inspPortaBanheiro, checklist_item: pergPorta1)
Answer.create(is_ok: 1, inspection: inspPortaBanheiro, checklist_item: pergPorta2)
Answer.create(is_ok: 0, inspection: inspPortaBanheiro, checklist_item: pergPorta3)

Answer.create(is_ok: 0, inspection: inspLavatorio, checklist_item: pergLav1)
Answer.create(is_ok: 1, inspection: inspLavatorio2, checklist_item: pergLav1)
=======
Building.create(idAtlas: "3911", name: "IO-Edifício Principal-191")
Building.create(idAtlas: "4719.000000000", name: "EP-Serviços Gerais-908")
Building.create(idAtlas: "4713.000000000", name: "EP-ENERQ-158")
Building.create(idAtlas: "118.000000000" , name: "FMVZ-BLOCO 9-240")
Building.create(idAtlas: "4668.000000000", name: "FMVZ-BIOTÉRIO DE AVES-GALPÃO 1-240")
Building.create(idAtlas: "4669.000000000", name: "FMVZ-BIOTÉRIO DE AVES-GALPÃO 2-240")
Building.create(idAtlas: "4670.000000000", name: "FMVZ-BIOTÉRIO DE AVES-GALPÃO 3-240")
Building.create(idAtlas: "4656.000000000", name: "IB-BIBLIOTECA E CENTRO DIDÁTICO-SN")
Building.create(idAtlas: "4706.000000000", name: "IGC-Garagem e Centro de Vivência-562")
Building.create(idAtlas: "5006.000000000", name: "MAE-CORREIOS-1466")
Building.create(idAtlas: "4572", name: "FAU-Edifício Villanova Antigas-876")
Building.create(idAtlas: "4676.000000000", name: "FFLCH-Casa de Cultura Japonesa-159")
Building.create(idAtlas: "4677.000000000", name: "RUSP-Almoxarifado Codage-270")
Building.create(idAtlas: "4593.000000000", name: "IQ-Bloco 11-748")
Building.create(idAtlas: "5.000000000", name: "FFLCH-Administração-717")
Building.create(idAtlas: "4594.000000000", name: "IQ-Bloco 12-748")
Building.create(idAtlas: "4592.000000000", name: "IQ-Bloco 10-748")
Building.create(idAtlas: "4589.000000000", name: "IQ-Bloco 07-748")
Building.create(idAtlas: "4582.000000000", name: "IQ-Bloco 00-748")
Building.create(idAtlas: "4588.000000000", name: "IQ-Bloco 06-748")
Building.create(idAtlas: "4586", name: "IQ-Bloco 04-748")
Building.create(idAtlas: "4591.000000000", name: "IQ-Bloco 09-748")
Building.create(idAtlas: "4808.000000000", name: "EP-Bloco A-128")
Building.create(idAtlas: "4812.000000000", name: "EP-Bloco C-128")
Building.create(idAtlas: "4806.000000000", name: "EP-Produção Blocos F e G-471")
Building.create(idAtlas: "4741.000000000", name: "Edifício Anexo-Museu de Arqueologia e Etnologia-1466")
Building.create(idAtlas: "4651.000000000", name: "MAC-MAC Exposições-160")
Building.create(idAtlas: "4653.000000000", name: "MAC-Manutenção-160")
Building.create(idAtlas: "4595.000000000", name: "Centro de Vivência da Reitoria-Centro de Vivência-74")
Building.create(idAtlas: "4576.000000000", name: "FO-Clínicas A,B e C-2227")
Building.create(idAtlas: "4326.000000000", name: "ECA-Edifício do Departamento de Música-443")
Building.create(idAtlas: "4569.000000000", name: "ECA-Bloco B-443")
Building.create(idAtlas: "4322.000000000", name: "ECA-Artes Cênicas-443")
Building.create(idAtlas: "4273.000000000", name: "ECA-Teatro Laboratório-215")
Building.create(idAtlas: "4568.000000000", name: "ECA-Bloco A-80")
Building.create(idAtlas: "4570.000000000", name: "ECA-Bloco C-443")
Building.create(idAtlas: "4567.000000000", name: "Restaurante-Restaurante do Instituto de Física, Lanchonete e Centro Acadêmica-123")
Building.create(idAtlas: "4725.000000000", name: "EP-Edifício da Administração-380")
Building.create(idAtlas: "4574.000000000", name: "FE-Escola de Aplicação Bloco A e B-220")
Building.create(idAtlas: "4644.000000000", name: "CEPEUSP-Vestiário das Piscinas-61")
Building.create(idAtlas: "4645.000000000", name: "CEPEUSP-Vestiário Masculino-61")
Building.create(idAtlas: "4680.000000000", name: "CEPEUSP-Lanchonete-61")
Building.create(idAtlas: "4648.000000000", name: "CEPEUSP-Vestiário Feminino-61")
Building.create(idAtlas: "4649.000000000", name: "CEPEUSP-Bloco G-61")
Building.create(idAtlas: "4646.000000000", name: "CEPEUSP-Bloco B-61")
Building.create(idAtlas: "4647.000000000", name: "CEPEUSP-Bloco D-61")
Building.create(idAtlas: "4650.000000000", name: "CEPEUSP-Bloco F-61")
Building.create(idAtlas: "4692.000000000", name: "IF-Depto. Física Experimental - Lab. Fis. Plasmas-187")
Building.create(idAtlas: "4742.000000000", name: "Galpão de Exposições-Edifício Antigo da UEP-1466")
Building.create(idAtlas: "5000.000000000", name: "MAE-Oficina de Manutenção-1466")
Building.create(idAtlas: "4", name: "FFLCH-Biblioteca Central-350")
Building.create(idAtlas: "4573.000000000", name: "FAU-Laboratório de Marcenaria e Gráfica-876")
Building.create(idAtlas: "4728.000000000", name: "EP-CTCC Centro de Técnicas de Construção Civil-115")
Building.create(idAtlas: "4809.000000000", name: "EP-Biênio Anfiteatros-128")
Building.create(idAtlas: "4720.000000000", name: "EP-Biênio Bloco D3-128")
Building.create(idAtlas: "4722.000000000", name: "EP-Biênio Bloco D1-128")
Building.create(idAtlas: "5001.000000000", name: "MAE-Oficina de Manutenção-1466")
Building.create(idAtlas: "1", name: "FFLCH-História e Geografia-338")
Building.create(idAtlas: "4810.000000000", name: "EP-Edifício da Engenharia Civil-83")
Building.create(idAtlas: "4710.000000000", name: "CCE-Blocos A, B e C-1721")
Building.create(idAtlas: "4659.000000000", name: "IB-Vestiário-SN")
Building.create(idAtlas: "4661.000000000", name: "IB-Laboratório-SN")
Building.create(idAtlas: "4662.000000000", name: "IB-Estufa-SN")
Building.create(idAtlas: "506.000000000", name: "IB-Estufa-SN")
Building.create(idAtlas: "4727.000000000", name: "EP-Edifício da Engenharia Mecânica-2231")
Building.create(idAtlas: "4716.000000000", name: "EP-Serviços Gerais, Blocos 13 e 14- SN")
Building.create(idAtlas: "4714.000000000", name: "EP-Engenharia Elétrica, Galpão Didático-1100")
Building.create(idAtlas: "4718.000000000", name: "EP-LSI Laboratório de Sistemas Integrados-158")
Building.create(idAtlas: "4715.000000000", name: "EP-PEA, Bloco 30-SN")
Building.create(idAtlas: "4702.000000000", name: "FEA-FEA 6, Bloco 6-748")
Building.create(idAtlas: "4703.000000000", name: "FEA-Pavilhão III, Bloco 3-748")
Building.create(idAtlas: "2", name: "FFLCH-Edifício das Letras-403")
Building.create(idAtlas: "1570.000000000", name: "EP-Engenharia Química, Bloco 21-350")
Building.create(idAtlas: "1549.000000000", name: "EP-Engenharia Química, Bloco 20-350")
Building.create(idAtlas: "1332.000000000", name: "EP-Engenharia Química, Bloco 19-350")
Building.create(idAtlas: "1023.000000000", name: "EP-Engenharia Química, Bloco 18-350")
Building.create(idAtlas: "4681.000000000", name: "IO-Manutenção-191")
Building.create(idAtlas: "4704.000000000", name: "FEA-Pavilhão II, Bloco 2-908")
Building.create(idAtlas: "4807.000000000", name: "EP-Engenharia Elétrica, Prédio-1100")
Building.create(idAtlas: "4663.000000000", name: "IB-ANDRÉ DREYFUS-277")
Building.create(idAtlas: "303.000000000", name: "IB-LABORATÓRIO DE BOTÂNICA-SN")
Building.create(idAtlas: "302.000000000", name: "IB-ANFITEATRO DO EDIFÍCIO ANDRÉ DREYFUS-277")
Building.create(idAtlas: "190.000000000", name: "IB-EDIFÍCIO DO GENOMA HUMANO-106")
Building.create(idAtlas: "3.000000000", name: "FFLCH-Edifício da Filosofia e Ciências Sociais-SN")
Building.create(idAtlas: "4494.000000000", name: "EP-Engenharia de Metalurgia e de Materiais-2463")
Building.create(idAtlas: "4723.000000000", name: "EP-Centro Moraes Rego, Departamento de Metalurgia-2463")
Building.create(idAtlas: "4724.000000000", name: "EP-Engenharia de Minas e Petróleo-2373")
Building.create(idAtlas: "4682.000000000", name: "FEA-Biblioteca-508")
Building.create(idAtlas: "994.000000000", name: "Semi-Industrial- Rua do Lago -250")
Building.create(idAtlas: "509.000000000", name: "Biotério e Almoxarifado-Avenida Prof. Lineu Prestes-580")
Building.create(idAtlas: "5002.000000000", name: "MAE-Depósito e Pintura DMP-1466")
Building.create(idAtlas: "5003", name: "MAE-Almoxarifado-1466")
Building.create(idAtlas: "4726", name: "EP-CTH - Laboratório de Hidráulica-2251")
Building.create(idAtlas: "4701.000000000", name: "FEA-Salas de Aula FAZESP, Bloco 5-508")
Building.create(idAtlas: "4279.000000000", name: "ECA-Biblioteca e Administração, Bloco D-443")
Building.create(idAtlas: "4311.000000000", name: "ECA-Artes Cênicas, Bloco Didático-443")
Building.create(idAtlas: "4331.000000000", name: "ECA-Artes Plásticas-151")
Building.create(idAtlas: "4571.000000000", name: "ECA-Depósito de Artes Plásticas-151")
Building.create(idAtlas: "4392.000000000", name: "IP-Professores e Laboratórios de Pesquisa, Blocos A e F-1721")
Building.create(idAtlas: "4344.000000000", name: "IP-Oficinas, Bloco E-1271")
Building.create(idAtlas: "4407.000000000", name: "IP-Biblioteca, Bloco C-1721")
Building.create(idAtlas: "687.000000000", name: "IB-Anfiteatro do Edifício Ernest Marcus-101")
Building.create(idAtlas: "4353.000000000", name: "IP-Atendimento, Bloco D-1721")
Building.create(idAtlas: "5009.000000000", name: "MAE-Bloco A-1280")
Building.create(idAtlas: "4581.000000000", name: "IME-Bloco B-1010")
Building.create(idAtlas: "4577.000000000", name: "ICB-Edifício Didático de Anatomia-2361")
Building.create(idAtlas: "157.000000000", name: "ICB-BIO I-2415")
Building.create(idAtlas: "5005.000000000", name: "MAE-Galpão DMP-1466")
Building.create(idAtlas: "4596.000000000", name: "FMVZ-Hospital dos Equinos-240")
Building.create(idAtlas: "4587", name: "IQ-Bloco 05-748")
Building.create(idAtlas: "4584.000000000", name: "IQ-Bloco 02-748")
Building.create(idAtlas: "4583.000000000", name: "IQ-Bloco 01-748")
Building.create(idAtlas: "179.000000000", name: "ICB-ICB II, Bloco didático-1374")
Building.create(idAtlas: "5004.000000000", name: "MAE-Restaurante e Vestiário-1466")
Building.create(idAtlas: "4430.000000000", name: "IP-Sala de Aula, Bloco B-1721")
Building.create(idAtlas: "4575.000000000", name: "FE-Escola de Aplicação, Ensino Médio, Bloco C-220")
Building.create(idAtlas: "4709.000000000", name: "STI-Edifício anexo do CTI-51")
Building.create(idAtlas: "4654.000000000", name: "IB-Ecologia Geral, Fisiologia e Zoologia-101")
Building.create(idAtlas: "4655.000000000", name: "IB-Restaurante-SN")
Building.create(idAtlas: "4657.000000000", name: "IB-Apiário-SN")
Building.create(idAtlas: "4658.000000000", name: "IB-Laboratório-SN")
Building.create(idAtlas: "4660.000000000", name: "IB-Laboratório de Botânica-SN")
Building.create(idAtlas: "4675.000000000", name: "ICB-Manutenção-SN")
Building.create(idAtlas: "173.000000000", name: "ICB-ICB II-1374")
Building.create(idAtlas: "148.000000000", name: "ICB-ICB IV-1730")
Building.create(idAtlas: "4731.000000000", name: "IB-Salas de Aula, Félix Rawscher-277")
Building.create(idAtlas: "396.000000000",  name: "ICB-Museu de Anatomia Humana, ICB III-2415")
Building.create(idAtlas: "10.000000000", name: "EP-Engenharia Química, Bloco 22-350")
Building.create(idAtlas: "4683.000000000", name: "MAE-Centro de Informações/Visitantes-SN")
Building.create(idAtlas: "4743.000000000", name: "Manutenção-Sem descrição-1466")
Building.create(idAtlas: "4805.000000000", name: "CEPEUSP-Estádio Olímpico-875")
Building.create(idAtlas: "4066.000000000", name: "CEPEUSP-Velódromo-601")
Building.create(idAtlas: "4639.000000000", name: "CEPEUSP-Módulos Poliesportivos, Quadras Cobertas-61")
Building.create(idAtlas: "4566.000000000", name: "SAS-Creche Oeste-1280")
Building.create(idAtlas: "4091.000000000", name: "SAS-Restaurante Central-300")
Building.create(idAtlas: "4638.000000000", name: "SAS-Creche Central-200")
Building.create(idAtlas: "4643.000000000", name: "FE-Edifício Principal, Bloco B-308")
Building.create(idAtlas: "4737.000000000", name: "FE-Biblioteca, Bloco B-308")
Building.create(idAtlas: "679.000000000" , name: "Q-Auditórios, Bloco 25-748")
Building.create(idAtlas: "4590.000000000", name: "IQ-Bloco 8-748")
Building.create(idAtlas: "4585.000000000", name: "IQ-Bloco 3-748")
Building.create(idAtlas: "3108.000000000", name: "EEFE-Bloco didático (B) e Quadras (C)-65")
Building.create(idAtlas: "4642.000000000", name: "EEFE-Garagem Coberta-65")
Building.create(idAtlas: "4641.000000000", name: "EEFE-Bloco A-65")
Building.create(idAtlas: "4640.000000000", name: "EEFE-Restaurante-65")
Building.create(idAtlas: "4717.000000000", name: "EP-Biênio, Bloco D2-471")
Building.create(idAtlas: "953.000000000", name: "SAU-Ciências Farmacêuticas, Bloco 17-580")
Building.create(idAtlas: "873.000000000", name: "SAU-Ciências Farmacêuticas, Bloco 16-580")
Building.create(idAtlas: "831.000000000", name: "SAU-Ciências Farmacêuticas, Bloco 15-580")
Building.create(idAtlas: "771.000000000", name: "SAU-Ciências Farmacêuticas, Bloco 14-580")
Building.create(idAtlas: "723.000000000", name: "SAU-Ciências Farmacêuticas, Bloco 13-580")
Building.create(idAtlas: "733.000000000", name: "SAU-Análises Clínicas e Toxicológicas, Bloco 13A-580")
Building.create(idAtlas: "717.000000000", name: "SAU-Administração, Bloco 13B-875")
Building.create(idAtlas: "4736.000000000", name: "FM-Paramédicas (Fono/Fisio/TO), Bloco 1 e 2-51")
Building.create(idAtlas: "4664.000000000", name: "FMVZ-Clínica Veterinária, Dermatologia e Cardiologia, Blocos 12 e 14-240")
Building.create(idAtlas: "4665.000000000", name: "FMVZ-Clínica Veterinária, Administração, Blocos 13 e 15-240")
Building.create(idAtlas: "4666.000000000", name: "Hospital Veterinário-Triagem-240")
Building.create(idAtlas: "4901.000000000", name: "IEE-Edifício Didático-1289")
Building.create(idAtlas: "4902.000000000", name: "IEE-Edifício Didático-1289")
Building.create(idAtlas: "4729.000000000", name: "IQ-Depósito de Produtos Químicos-748")
Building.create(idAtlas: "221.000000000" , name: "IQ-Biblioteca-748")
Building.create(idAtlas: "4739.000000000", name: "MAE-Edifício Principal-1466")
Building.create(idAtlas: "4505.000000000", name: "FMVZ-Bloco 17-240")
Building.create(idAtlas: "4667.000000000", name: "FMVZ-Grêmio dos Funcionários-240")
Building.create(idAtlas: "4707.000000000", name: "FMVZ-VCI, Edifício Vicente Boreli-240")
Building.create(idAtlas: "4708.000000000", name: "FMVZ-Museu de Anatomia Veterinária e Canil da Anatomia-240")
Building.create(idAtlas: "123.000000000", name: "FMVZ-Blocos Complementares-240")
Building.create(idAtlas: "126.000000000", name: "FMVZ-Laboratório de Inseminação Artificial, Bloco 19-240")
Building.create(idAtlas: "4916.000000000", name: "IEE-Salão de Máquinas Rotativas-1289")
Building.create(idAtlas: "4913.000000000", name: "IEE-Grêmio dos Funcionários-1289")
Building.create(idAtlas: "4690.000000000", name: "IF-Edifício Principal-186")
Building.create(idAtlas: "4691.000000000", name: "IF-Conjunto Abrahão de Moraes, Bloco A-123")
Building.create(idAtlas: "4684.000000000", name: "IF-Auditório de Física Experimental, Adma Jafet-187")
Building.create(idAtlas: "4600.000000000", name: "FMVZ-Anexo do Bloco 17-240")
Building.create(idAtlas: "4671.000000000", name: "FMVZ-Canil-240")
Building.create(idAtlas: "4672.000000000", name: "FMVZ-Patologia Suína-240")
Building.create(idAtlas: "4599.000000000", name: "FMVZ-Galpão de Ruminantes-240")
Building.create(idAtlas: "4598.000000000", name: "FMVZ-Galpão de Aves-240")
Building.create(idAtlas: "4636.000000000", name: "FO-Oficina e Lavanderia-2227")
Building.create(idAtlas: "4637.000000000", name: "FO-Garagem-2227")
Building.create(idAtlas: "4635.000000000", name: "FO-Restaurante-2227")
Building.create(idAtlas: "4634.000000000", name: "FO-Recepção-2227")
Building.create(idAtlas: "4633.000000000", name: "FO-Fundação de Odontologia-2227")
Building.create(idAtlas: "4801.000000000", name: "IAG-Biblioteca e Administração-1226")
Building.create(idAtlas: "4802.000000000", name: "IAG-Blocos C e D-1226")
Building.create(idAtlas: "4800.000000000", name: "IAG-Edifício Principal-1226")
Building.create(idAtlas: "4803.000000000", name: "IAG-Blocos A, B e E-1226")
Building.create(idAtlas: "4900.000000000", name: "IEE-Metrologia, Ensino e Pesquisa-1289")
Building.create(idAtlas: "4903.000000000", name: "IEE-Laboratório de Materiais-1289")
Building.create(idAtlas: "4904.000000000", name: "IEE-Oficinas-1289")
Building.create(idAtlas: "4905.000000000", name: "IEE-Laboratório de Fundamentos de Energia-1289")
Building.create(idAtlas: "4906.000000000", name: "IEE-Laboratório de Conservação de Energia-1289")
Building.create(idAtlas: "4907.000000000", name: "IEE-Laboratório de Sistemas Fotovoltáicos-1289")
Building.create(idAtlas: "4908.000000000", name: "IEE-Laboratório de Sistemas Fotovoltáicos-1289")
Building.create(idAtlas: "4910.000000000", name: "IEE-Edifício da Administração e Almoxarifado Central-1289")
Building.create(idAtlas: "4911.000000000", name: "IEE-Pavilhão de Máquinas-1289")
Building.create(idAtlas: "4915.000000000", name: "IEE-Edifício de Subestações Compactas-1289")
Building.create(idAtlas: "4912.000000000", name: "IEE-Laboratório de Pilhas e Acumuladores-1289")
Building.create(idAtlas: "4601.000000000", name: "IF-Edifício Basílio Jafet-187")
Building.create(idAtlas: "4694.000000000", name: "IF-Oficina Central, Edifício Van der Graaf-187")
Building.create(idAtlas: "11.000000000", name: "IF-Laboratório de Radiação e Alta Tensão-187")
Building.create(idAtlas: "4695.000000000", name: "IF-Sociedade Brasileira de Física-187")
Building.create(idAtlas: "4696.000000000", name: "IF-Laboratório de Física Experimental-187")
Building.create(idAtlas: "4697.000000000", name: "IF-Laboratório de Dosimetria-187")
Building.create(idAtlas: "4579.000000000", name: "IF-Bloco C-187")
Building.create(idAtlas: "4700.000000000", name: "IF-Laboratório de Física dos Materiais-187")
Building.create(idAtlas: "14.000000000", name: "IF-Auditório, Bloco E-187")
Building.create(idAtlas: "4740.000000000", name: "Sem Descrição-Sanitários-1466")
Building.create(idAtlas: "3784.000000000", name: "IGC-Edifício Principal e Biblioteca-562")
Building.create(idAtlas: "4733.000000000", name: "IME-Bloco C-1010")
Building.create(idAtlas: "4121.000000000", name: "IME-Bloco A-1010")
Building.create(idAtlas: "4285.000000000", name: "PRCEU-Anfiteatro de Convenções Camargo Guarnieri-109")
Building.create(idAtlas: "5007.000000000", name: "MAE-Arquivo da Reitoria-SN")
Building.create(idAtlas: "4674.000000000", name: "RUSP-Anexo do PRCEU e do Conselho Universitário-109")
Building.create(idAtlas: "4673.000000000", name: "RUSP-SAUSP,Rua Francisco dos Santos-SN")
Building.create(idAtlas: "4235.000000000", name: "RUSP-Colméias, Conjunto A-181")
Building.create(idAtlas: "4678.000000000", name: "RUSP-Colméias, Conjuntos C e D-181")
Building.create(idAtlas: "4199.000000000", name: "RUSP-Colméias, Conjunto B-181")
Building.create(idAtlas: "12.000000000", name: "IF-Departamento de Fisica Nuclear-187")
Building.create(idAtlas: "13.000000000", name: "IF-Conjunto Auditório Alessandro Volta, Bloco D-187")
Building.create(idAtlas: "1214.000000000", name: "IQ-Centro de Vivência-580")
Building.create(idAtlas: "4679.000000000", name: "FE-Bloco A-SN")
Building.create(idAtlas: "4578.000000000", name: "IF-Conjunto Alessandro Volta, Bloco F-187")
Building.create(idAtlas: "4699.000000000", name: "IF-Conjunto Alessandro Volta, Blocos A e B-187")
Building.create(idAtlas: "4693.000000000", name: "IF-Edificio Pelletron-SN")
Building.create(idAtlas: "4698.000000000", name: "IF-Instituto do Milênio de Fluidos Complexos-SN")
Building.create(idAtlas: "4711.000000000", name: "CCE-Bloco D")
Building.create(idAtlas: "4730.000000000", name: "IQ-Interligação Conjunto das Químicas, Circulação Vertical-SN")
Building.create(idAtlas: "4732.000000000", name: "ICB-Biotério de Ratos-SN")
Building.create(idAtlas: "4734.000000000", name: "IO-Bloco Didático-SN")
Building.create(idAtlas: "4738.000000000", name: "EEFE-Bloco de Laboratórios-SN")
Building.create(idAtlas: "4744.000000000", name: "Edifício de Serviços-Sem Descrição-SN")
Building.create(idAtlas: "4804.000000000", name: "IAG-Blocos F e G-1226")
Building.create(idAtlas: "4712.000000000", name: "EP-Tanque de Provas, Eng. Naval-SN")
Building.create(idAtlas: "4914.000000000", name: "IEE-Cabine Elétrica-SN")
Building.create(idAtlas: "5011.000000000", name: "IGC-Laboratório de Geocronologia-SN")
Building.create(idAtlas: "5010.000000000", name: "IGC-Laboratório de Geocronologia-SN")
Building.create(idAtlas: "4630.000000000", name: "FO-Edifício Principal-2227")
Building.create(idAtlas: "4652.000000000", name: "MAC-Anexo MAC-SN")
Building.create(idAtlas: "4565.000000000", name: "IP-Administração, Bloco G-SN")
Building.create(idAtlas: "5013.000000000", name: "PRCEU-Biblioteca Brasiliana-SN")
Building.create(idAtlas: "4276", name: "MAE-Garagem da COCESP-1280")
>>>>>>> interface2
